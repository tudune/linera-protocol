searchState.loadedDescShard("linera_exporter", 0, "Options for running the linera block exporter.\nPath to the TOML file describing the configuration for the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nPath to the file describing the initial user chains (aka …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximal number of entries in the storage cache.\nThe maximal memory used in the storage cache.\nThe maximal number of simultaneous queries to the database\nThe maximal size of an entry in the storage cache.\nThe maximal number of stream queries to the database\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nStorage configuration for the blockchain history, chain …\nThe number of Tokio worker threads to use.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nState of the linera exporter as a view.\nState of the linera exporter for a particular chain as a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTracks the highest block known to be in storage with its …\nTracks the highest block already processed (plus one) for …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nThe chain status, by chain ID.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.")