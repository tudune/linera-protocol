searchState.loadedDescShard("nybbles", 0, "nybbles\nStructure representing a sequence of nibbles.\nReturns a mutable reference to the underlying byte slice.\nReturns a mutable reference to the underlying byte vector.\nReturns a reference to the underlying byte slice.\nReturns the nibble at the given index.\nClears the current nibbles.\nReturns the length of the common prefix between the two …\nReturns the length of the common prefix between this …\nExtend the current nibbles with another nibbles.\nExtend the current nibbles with another byte slice.\nReturns the first nibble of this nibble sequence.\nReturns the argument unchanged.\nCreates a new <code>Nibbles</code> instance by copying the given bytes.\nCreates a new <code>Nibbles</code> instance by copying the given bytes, …\nCreates a new <code>Nibbles</code> instance with the given nibbles.\nCreates a new <code>Nibbles</code> instance with the given nibbles.\nCreates a new <code>Nibbles</code> instance from a byte vector, without …\nCreates a new <code>Nibbles</code> instance from a byte vector, without …\nGets the byte at the given index by combining two …\nGets the byte at the given index by combining two …\nGets the byte at the given index by combining two …\nGets the byte at the given index by combining two …\nReturns <code>true</code> if this nibble sequence starts with the given …\nIncrements the nibble sequence by one.\nCalls <code>U::from(self)</code>.\nThe last element of the hex vector is used to determine …\nJoin two nibbles together.\nReturns the last nibble of this nibble sequence.\nCreates a new empty <code>Nibbles</code> instance.\nPacks the nibbles into the given slice.\nPacks the nibbles into the given slice.\nPacks the nibbles into the given slice.\nPacks the nibbles into the given slice without checking …\nPacks the nibbles into the given pointer.\nPacks the nibbles into the given slice without checking …\nPops a nibble from the end of the current nibbles.\nPushes a nibble to the end of the current nibbles.\nPushes a nibble to the end of the current nibbles without …\nSets the nibble at the given index.\nSets the nibble at the given index, without checking its …\nSlice the current nibbles within the provided index range.\nInitializes a smallvec with the given length and a closure …\nTruncates the current nibbles to the given length.\nConverts a byte slice into a <code>Nibbles</code> instance containing …\nUnpacks into the given slice rather than allocating a new …\nUnpacks into the given slice rather than allocating a new …\nCreates a new <code>Nibbles</code> instance with the given capacity.")