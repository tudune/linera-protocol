searchState.loadedDescShard("alloy", 3, "Returns a true <code>Choice</code> if this value is <code>None</code>.\nReturns a true <code>Choice</code> if this value is <code>Some</code>.\nReturns a <code>None</code> value if the option is <code>None</code>, otherwise …\nThis method is used to construct a new <code>CtOption&lt;T&gt;</code> and …\nConstructs a new instance of <code>BlackBox</code> which will wrap the …\nReturns <code>self</code> if it contains a value, and otherwise returns …\nThis returns the underlying value but panics if it is not …\nThis returns the underlying value if it is <code>Some</code> or the …\nThis returns the underlying value if it is <code>Some</code> or the …\nUnwrap the <code>Choice</code> wrapper to reveal the underlying <code>u8</code>.\nMarker trait for types whose <code>Default</code> is the desired …\nFallible trait for representing cases where zeroization …\nTrait for securely erasing values from memory.\nDerive the <code>Zeroize</code> trait.\nMarker trait signifying that this type will …\nDerive the <code>ZeroizeOnDrop</code> trait.\n<code>Zeroizing</code> is a a wrapper for any <code>Z: Zeroize</code> type which …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMove value inside a <code>Zeroizing</code> wrapper which ensures it …\nTry to zero out this object from memory using Rust …\nZero out this object from memory using Rust intrinsics …\nZeroizes a flat type/struct. Only zeroizes the values that …\nExtension trait for iterators over mutable field elements …\nA non-allocating batch inverter.\nHow many bits of information can be reliably stored in the …\nGenerator of the <code>t-order</code> multiplicative subgroup.\nThis trait represents an element of a field.\nTrait for constructing a <code>PrimeField</code> element from a …\nModulus of the field written as a string for debugging …\nA fixed multiplicative generator of <code>modulus - 1</code> order. …\nHow many bits are needed to represent an element of this …\nThe one element of the field, the multiplicative identity.\nThis represents an element of a non-binary prime field.\nDerive the <code>PrimeField</code> trait.\nThe <code>2^s</code> root of unity.\nInverse of <code>Self::ROOT_OF_UNITY</code>.\nThe prime field can be converted back and forth into this …\nAn integer <code>s</code> satisfying the equation <code>2^s * t = modulus - 1</code> …\nInverse of $2$ in the field.\nThe subset of prime-order fields such that <code>(modulus - 1)</code> …\nThe zero element of the field, the additive identity.\nA field element of small multiplicative order $N$.\nConsumes this iterator and inverts each field element …\nCubes this element.\nFunctions and re-exported crates used by the <code>PrimeField</code> …\nDoubles this element.\nReturns the argument unchanged.\nAttempts to convert a byte representation of a field …\nAttempts to convert a byte representation of a field …\nInterpret a string of numbers as a (congruent) prime field …\nObtains a field element congruent to the integer <code>v</code>.\nReturns a field element that is congruent to the provided …\nHelper methods for implementing the <code>ff</code> traits.\nCalls <code>U::from(self)</code>.\nComputes the multiplicative inverse of this element, …\nInverts each field element in <code>elements</code> (when nonzero). …\nInverts each field element in <code>items</code> (when nonzero). …\nReturns true iff this element is even.\nReturns true iff this element is odd.\nReturns true iff this element is zero.\nReturns true iff this element is zero.\nExponentiates <code>self</code> by <code>exp</code>, where <code>exp</code> is a little-endian …\nExponentiates <code>self</code> by <code>exp</code>, where <code>exp</code> is a little-endian …\nReturns an element chosen uniformly at random using a …\nReturns the square root of the field element, if it is …\nEquivalent to <code>Self::sqrt_ratio(self, one())</code>.\nComputes:\nSquares this element.\nConverts an element of the prime field into the standard …\nComputes <code>a + b + carry</code>, returning the result and the new …\nComputes <code>a + (b * c) + carry</code>, returning the result and the …\nComputes <code>a - (b + borrow)</code>, returning the result and the …\nA type alias for <code>BigEndian</code>.\nDefines big-endian serialization.\n<code>ByteOrder</code> describes types that can serialize integers as …\nA type alias for <code>LittleEndian</code>.\nDefines little-endian serialization.\nDefines system native-endian serialization.\nDefines network byte order serialization.\nExtends <code>Read</code> with methods for reading numbers. (For <code>std::io</code>…\nExtends <code>Write</code> with methods for writing numbers. (For …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts the given slice of IEEE754 single-precision (4 …\nConverts the given slice of IEEE754 double-precision (8 …\nConverts the given slice of signed 128 bit integers to a …\nConverts the given slice of signed 16 bit integers to a …\nConverts the given slice of signed 32 bit integers to a …\nConverts the given slice of signed 64 bit integers to a …\nConverts the given slice of unsigned 128 bit integers to a …\nConverts the given slice of unsigned 16 bit integers to a …\nConverts the given slice of unsigned 32 bit integers to a …\nConverts the given slice of unsigned 64 bit integers to a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads a IEEE754 single-precision (4 bytes) floating point …\nReads a IEEE754 single-precision (4 bytes) floating point …\nReads a sequence of IEEE754 single-precision (4 bytes) …\nReads IEEE754 single-precision (4 bytes) floating point …\n<strong>DEPRECATED</strong>.\n<strong>DEPRECATED</strong>.\nReads a IEEE754 double-precision (8 bytes) floating point …\nReads a IEEE754 double-precision (8 bytes) floating point …\nReads a sequence of IEEE754 double-precision (8 bytes) …\nReads IEEE754 single-precision (4 bytes) floating point …\n<strong>DEPRECATED</strong>.\n<strong>DEPRECATED</strong>.\nReads a signed 128 bit integer from the underlying reader.\nReads a signed 128 bit integer from <code>buf</code>.\nReads a sequence of signed 128 bit integers from the …\nReads signed 128 bit integers from <code>src</code> into <code>dst</code>.\nReads a signed 16 bit integer from the underlying reader.\nReads a signed 16 bit integer from <code>buf</code>.\nReads a sequence of signed 16 bit integers from the …\nReads signed 16 bit integers from <code>src</code> to <code>dst</code>.\nReads a signed 24 bit integer from the underlying reader.\nReads a signed 24 bit integer from <code>buf</code>, stored in i32.\nReads a signed 32 bit integer from the underlying reader.\nReads a signed 32 bit integer from <code>buf</code>.\nReads a sequence of signed 32 bit integers from the …\nReads signed 32 bit integers from <code>src</code> into <code>dst</code>.\nReads a signed 48 bit integer from the underlying reader.\nReads a signed 48 bit integer from <code>buf</code>, stored in i64.\nReads a signed 64 bit integer from the underlying reader.\nReads a signed 64 bit integer from <code>buf</code>.\nReads a sequence of signed 64 bit integers from the …\nReads signed 64 bit integers from <code>src</code> into <code>dst</code>.\nReads a signed 8 bit integer from the underlying reader.\nReads a sequence of signed 8 bit integers from the …\nReads a signed n-bytes integer from the underlying reader.\nReads a signed n-bytes integer from <code>buf</code>.\nReads a signed n-bytes integer from the underlying reader.\nReads a signed n-bytes integer from <code>buf</code>.\nReads an unsigned 128 bit integer from <code>buf</code>.\nReads an unsigned 128 bit integer from the underlying …\nReads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.\nReads a sequence of unsigned 128 bit integers from the …\nReads an unsigned 16 bit integer from <code>buf</code>.\nReads an unsigned 16 bit integer from the underlying …\nReads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.\nReads a sequence of unsigned 16 bit integers from the …\nReads an unsigned 24 bit integer from the underlying …\nReads an unsigned 24 bit integer from <code>buf</code>, stored in u32.\nReads an unsigned 32 bit integer from <code>buf</code>.\nReads an unsigned 32 bit integer from the underlying …\nReads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.\nReads a sequence of unsigned 32 bit integers from the …\nReads an unsigned 48 bit integer from the underlying …\nReads an unsigned 48 bit integer from <code>buf</code>, stored in u64.\nReads an unsigned 64 bit integer from <code>buf</code>.\nReads an unsigned 64 bit integer from the underlying …\nReads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.\nReads a sequence of unsigned 64 bit integers from the …\nReads an unsigned 8 bit integer from the underlying reader.\nReads an unsigned n-bytes integer from <code>buf</code>.\nReads an unsigned n-bytes integer from the underlying …\nReads an unsigned n-bytes integer from <code>buf</code>.\nReads an unsigned n-bytes integer from the underlying …\nWrites a IEEE754 single-precision (4 bytes) floating point …\nWrites a IEEE754 single-precision (4 bytes) floating point …\nWrites IEEE754 single-precision (4 bytes) floating point …\nWrites a IEEE754 double-precision (8 bytes) floating point …\nWrites a IEEE754 double-precision (8 bytes) floating point …\nWrites IEEE754 double-precision (8 bytes) floating point …\nWrites a signed 128 bit integer to the underlying writer.\nWrites a signed 128 bit integer <code>n</code> to <code>buf</code>.\nWrites signed 128 bit integers from <code>src</code> into <code>dst</code>.\nWrites a signed 16 bit integer to the underlying writer.\nWrites a signed 16 bit integer <code>n</code> to <code>buf</code>.\nWrites signed 16 bit integers from <code>src</code> into <code>dst</code>.\nWrites a signed 24 bit integer to the underlying writer.\nWrites a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.\nWrites a signed 32 bit integer to the underlying writer.\nWrites a signed 32 bit integer <code>n</code> to <code>buf</code>.\nWrites signed 32 bit integers from <code>src</code> into <code>dst</code>.\nWrites a signed 48 bit integer to the underlying writer.\nWrites a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.\nWrites a signed 64 bit integer to the underlying writer.\nWrites a signed 64 bit integer <code>n</code> to <code>buf</code>.\nWrites signed 64 bit integers from <code>src</code> into <code>dst</code>.\nWrites a signed 8 bit integer to the underlying writer.\nWrites signed 8 bit integers from <code>src</code> into <code>dst</code>.\nWrites a signed n-bytes integer to the underlying writer.\nWrites a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.\nWrites a signed n-bytes integer to the underlying writer.\nWrites a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.\nWrites an unsigned 128 bit integer <code>n</code> to <code>buf</code>.\nWrites an unsigned 128 bit integer to the underlying …\nWrites unsigned 128 bit integers from <code>src</code> into <code>dst</code>.\nWrites an unsigned 16 bit integer <code>n</code> to <code>buf</code>.\nWrites an unsigned 16 bit integer to the underlying writer.\nWrites unsigned 16 bit integers from <code>src</code> into <code>dst</code>.\nWrites an unsigned 24 bit integer to the underlying writer.\nWrites an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.\nWrites an unsigned 32 bit integer <code>n</code> to <code>buf</code>.\nWrites an unsigned 32 bit integer to the underlying writer.\nWrites unsigned 32 bit integers from <code>src</code> into <code>dst</code>.\nWrites an unsigned 48 bit integer to the underlying writer.\nWrites an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.\nWrites an unsigned 64 bit integer <code>n</code> to <code>buf</code>.\nWrites an unsigned 64 bit integer to the underlying writer.\nWrites unsigned 64 bit integers from <code>src</code> into <code>dst</code>.\nWrites an unsigned 8 bit integer to the underlying writer.\nWrites an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.\nWrites an unsigned n-bytes integer to the underlying …\nWrites an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.\nWrites an unsigned n-bytes integer to the underlying …\nComputes:\nConstant-time implementation of Tonelli–Shanks’ …\nThe affine representation for this elliptic curve.\nEfficient representation of an elliptic curve point …\nThis trait represents an element of a cryptographic group.\nA helper trait for types with a group operation.\nA helper trait for references with a group operation.\nThe encoding of group elements.\nScalars modulo the order of this group’s scalar field.\nA helper trait for types implementing group scalar …\nA helper trait for references implementing group scalar …\nAffine representation of a point on an elliptic curve that …\nA “w-ary non-adjacent form” scalar multiplication …\nA fixed window table for a group element, precomputed to …\nExtension trait on a <code>Group</code> that provides helpers used by …\nA “w-ary non-adjacent form” scalar, that uses …\nGiven a base and a number of scalars, compute a window …\nPerforms exponentiation given a base.\nConverts a batch of projective elements into affine …\nDoubles this element.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAttempts to deserialize a group element from its encoding.\nAttempts to deserialize a group element, not checking if …\nAttempts to deserialize an element from its uncompressed …\nAttempts to deserialize an uncompressed element, not …\nReturns a fixed generator of the prime-order subgroup.\nReturns the additive identity, also known as the “…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDetermines if this point is the identity.\nConstruct a new wNAF context without allocating.\nComputes the w-NAF representation of the given scalar with …\nComputes a window table for the given base with the …\nReturns an element chosen uniformly at random from the …\nRecommends a wNAF window size given the number of scalars …\nGiven a scalar, compute its wNAF representation and return …\nPerforms exponentiation given a scalar.\nConstructs new space for the window table while borrowing …\nConstructs new space for the scalar representation while …\nConverts this element into its affine representation.\nConverts this element into its byte encoding. This may or …\nConverts this element into its uncompressed encoding, so …\nEfficient representation of an elliptic curve point …\nAffine representation of an elliptic curve point …\nThis trait represents an element of a cryptographic group …\nThe large prime-order subgroup in which cryptographic …\nMaps <code>self</code> to the prime-order subgroup by multiplying this …\nReturns a fixed generator of unknown exponent.\nReturns the additive identity.\nReturns <code>self</code> if it is contained in the prime-order …\nDetermines if this point represents the point at infinity; …\nDetermines if this element is of small order.\nDetermines if this element is “torsion free”, i.e., is …\nConverts this element to its curve representation.\nEfficient representation of an elliptic curve point …\nAffine representation of an elliptic curve point …\nThis trait represents an element of a prime-order …\nReturns a fixed generator of unknown exponent.\nReturns the additive identity.\nDetermines if this point represents the point at infinity; …\nConverts this element to its curve representation.\nThe addition operator <code>+</code>.\nThe addition assignment operator <code>+=</code>.\nPerform a batched inversion on a sequence of field …\nBytes used as input to <code>Reduce::reduce_bytes</code>.\nPerform an inversion on a field element (i.e. base field …\nLinear combination.\nLinear combination (extended version).\nThe multiplication operator <code>*</code>.\nMultiplication by the generator.\nThe unary negation operator <code>-</code>.\nField element type\nThe output of batch inversion. A container of field …\nThe resulting type after applying the <code>+</code> operator.\nThe resulting type after applying the <code>-</code> operator.\nThe resulting type after applying the <code>-</code> operator.\nThe resulting type after applying the <code>*</code> operator.\nThe resulting type after applying the <code>&gt;&gt;</code> operator.\nModular reduction.\nModular reduction to a non-zero output.\nThe right shift operator <code>&gt;&gt;</code>. Note that because this trait …\nThe right shift assignment operator <code>&gt;&gt;=</code>.\nThe subtraction operator <code>-</code>.\nThe subtraction assignment operator <code>-=</code>.\nPerforms the <code>+</code> operation.\nPerforms the <code>+=</code> operation.\nInvert a batch of field elements.\nInvert a field element.\nInvert a field element in variable time.\nCalculates <code>x * k + y * l</code>.\nCalculates <code>x1 * k1 + ... + xn * kn</code>.\nPerforms the <code>*</code> operation.\nMultiply by the generator of the prime-order subgroup.\nPerforms the unary <code>-</code> operation.\nPerform a modular reduction, returning a field element.\nInterpret the given bytes as an integer and perform a …\nPerform a modular reduction, returning a field element.\nInterpret the given bytes as an integer and perform a …\nPerforms the <code>&gt;&gt;</code> operation.\nPerforms the <code>&gt;&gt;=</code> operation.\nPerforms the <code>-</code> operation.\nPerforms the <code>-=</code> operation.\n<code>AlgorithmIdentifier</code> reference which has <code>AnyRef</code> parameters.\nASN.1 DER-related errors.\nA trait which associates an OID with a type.\nCarriage return: <code>\\r</code> (Pre-OS X Macintosh)\nCarriage return + line feed: <code>\\r\\n</code> (Windows)\nParse a private key object from a PKCS#8 encoded document.\nParse a public key object from an encoded SPKI document.\nASN.1 DER-encoded document.\nSerialize a private key object to a PKCS#8 encoded …\nSerialize a public key object to a SPKI-encoded document.\nContains the error value\nError type\nMalformed cryptographic key contained in a PKCS#8 document.\nLine feed: <code>\\n</code> (Unix OSes)\nLine endings: variants of newline characters that can be …\nMaximum size of a BER/DER-encoded OID in bytes.\nThe OID associated with this type.\nObject identifier (OID).\nContains the success value\n<code>AlgorithmIdentifier::parameters</code> is malformed or otherwise …\nPKCS#8 <code>PrivateKeyInfo</code>.\nPublic key errors propagated from the <code>spki::Error</code> type.\nResult type\nSecret <code>Document</code> type.\nX.509 <code>SubjectPublicKeyInfo</code> (SPKI) as defined in RFC 5280 …\n<code>SubjectPublicKeyInfo</code> with <code>AnyRef</code> algorithm parameters, and …\nDenotes PKCS#8 v1: no public key field.\nDenotes PKCS#8 v2: <code>OneAsymmetricKey</code> with public key field.\nVersion identifier for PKCS#8 documents.\nX.509 <code>AlgorithmIdentifier</code> for the public key type\nX.509 <code>AlgorithmIdentifier</code> for the private key type.\nX.509 <code>AlgorithmIdentifier</code> for the public key type\nReturn the arc with the given index, if it exists.\nIterate over the arcs (a.k.a. nodes) of an <code>ObjectIdentifier</code>…\nGet the BER/DER serialization of this OID as bytes.\nGet the byte serialization of this <code>LineEnding</code>.\nGet the ASN.1 DER-encoded bytes of this document.\nBorrow the inner serialized bytes of this document.\nTry to decode the inner ASN.1 DER message contained in this\nTry to decode the inner ASN.1 DER message as the given …\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode the provided type as ASN.1 DER, storing the …\nEncode the provided type as ASN.1 DER.\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse an OID from a slice of <code>Arc</code> values (i.e. integers).\nParse an OID from from its BER/DER encoding.\nCreate a <code>SubjectPublicKeyInfoOwned</code> from any object that …\nDecode ASN.1 DER document from PEM.\nDecode ASN.1 DER document from PEM.\nDeserialize PKCS#8 private key from ASN.1 DER-encoded data …\nDeserialize PKCS#8-encoded private key from PEM.\nDeserialize object from ASN.1 DER-encoded […\nDeserialize PEM-encoded [<code>SubjectPublicKeyInfo</code>].\nIs this version expected to have a public key?\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert to a <code>SecretDocument</code>.\nConvert to an ASN.1 DER-encoded byte vector.\nGet the length of this <code>ObjectIdentifier</code> in arcs.\nGet the encoded length of this <code>LineEnding</code>.\nGet the length of the encoded ASN.1 DER in bytes.\nGet the length of the encoded ASN.1 DER in bytes.\nParse an <code>ObjectIdentifier</code> from the dot-delimited string …\nCreate a new PKCS#8 <code>PrivateKeyInfo</code> message.\nParse an <code>ObjectIdentifier</code> from the dot-delimited string …\nAlgorithm OID, i.e. the <code>algorithm</code> field in the …\nAlgorithm <code>parameters</code>.\nGet the parent OID of this one (if applicable).\nPrivate key data.\nPublic key data, optionally available if version is V2.\nPush an additional arc onto this OID, returning the child …\nRead ASN.1 DER document from a file.\nRead ASN.1 DER document from a file.\nRead PEM-encoded ASN.1 DER document from a file.\nRead PEM-encoded ASN.1 DER document from a file.\nLoad PKCS#8 private key from an ASN.1 DER-encoded file on …\nLoad PKCS#8 private key from a PEM-encoded file on the …\nLoad public key object from an ASN.1 DER-encoded file on …\nLoad public key object from a PEM-encoded file on the …\nPublic key data\nPublic key data\nReturn an allocated ASN.1 DER serialization as a byte …\nEncode ASN.1 DER document as a PEM string with …\nEncode ASN.1 DER document as a PEM string.\nSerialize a <code>SecretDocument</code> containing a PKCS#8-encoded …\nSerialize this private key as PEM-encoded PKCS#8 with the …\nSerialize a <code>Document</code> containing a SPKI-encoded public key.\nSerialize this public key as PEM-encoded SPKI with the …\nReturn an ASN.1 DER-encoded byte vector.\nGet the PKCS#8 <code>Version</code> for this structure.\nWrite ASN.1 DER document to a file.\nWrite ASN.1 DER document to a file.\nWrite PEM-encoded ASN.1 DER document to a file.\nWrite PEM-encoded ASN.1 DER document to a file.\nWrite ASN.1 DER-encoded PKCS#8 private key to the given …\nWrite ASN.1 DER-encoded PKCS#8 private key to the given …\nWrite ASN.1 DER-encoded public key to the given path\nWrite ASN.1 DER-encoded public key to the given path\nASN.1 <code>ANY</code>: represents any explicitly tagged ASN.1 value.\nASN.1 <code>ANY</code>: represents any explicitly tagged ASN.1 value.\n<code>APPLICATION</code>: types whose meaning is specific to an …\nApplication tag.\n<code>BIT STRING</code> tag: <code>3</code>.\n<code>BMPString</code> tag: <code>30</code>.\n<code>BOOLEAN</code> tag: <code>1</code>.\nASN.1 <code>CHOICE</code> denotes a union of one or more possible …\nClass of an ASN.1 tag.\n<code>CONTEXT-SPECIFIC</code>: types whose meaning is specific to a …\nContext-specific tag.\nDate-and-time type shared by multiple ASN.1 types (e.g. …\nDate-and-time related errors.\nDecoding trait.\nMarker trait for data structures that can be decoded from …\nPEM decoding trait.\nDecode the value part of a Tag-Length-Value encoded field, …\nDER ordering trait.\nASN.1 DER-encoded document.\nEncoding trait.\nPEM encoding trait.\nReference encoder: wrapper type which impls <code>Encode</code> for any …\nEncode the value part of a Tag-Length-Value encoded field, …\nReference value encoder: wrapper type which impls …\n<code>ENUMERATED</code> tag: <code>10</code>.\nContains the error value\nError type.\nError type.\n<code>EXPLICIT</code> tagging.\nThis error indicates a previous DER parsing operation …\nFile not found error.\nTypes which have a constant ASN.1 <code>Tag</code>.\n<code>GeneralizedTime</code> tag: <code>24</code>.\nASN.1 DER headers: tag + length component of TLV-encoded …\nIndefinite length.\nThis is the maximum date represented by the <code>DateTime</code> This …\n<code>IA5String</code> tag: <code>22</code>.\n<code>IMPLICIT</code> tagging.\nMessage is incomplete and does not contain all of the …\nLength type with support for indefinite lengths as used by …\nIndefinite length disallowed.\n<code>INTEGER</code> tag: <code>2</code>.\nI/O errors.\nASN.1-encoded length.\nIncorrect length for a given field.\nMaximum length currently supported: 256 MiB\nTag number <code>0</code>\nTag number <code>1</code>\nTag number <code>10</code>\nTag number <code>11</code>\nTag number <code>12</code>\nTag number <code>13</code>\nTag number <code>14</code>\nTag number <code>15</code>\nTag number <code>16</code>\nTag number <code>17</code>\nTag number <code>18</code>\nTag number <code>19</code>\nTag number <code>2</code>\nTag number <code>20</code>\nTag number <code>21</code>\nTag number <code>22</code>\nTag number <code>23</code>\nTag number <code>24</code>\nTag number <code>25</code>\nTag number <code>26</code>\nTag number <code>27</code>\nTag number <code>28</code>\nTag number <code>29</code>\nTag number <code>3</code>\nTag number <code>30</code>\nTag number <code>4</code>\nTag number <code>5</code>\nTag number <code>6</code>\nTag number <code>7</code>\nTag number <code>8</code>\nTag number <code>9</code>\n<code>AnyRef</code> representation of the ASN.1 <code>NULL</code> type.\nReader type used by <code>Reader::read_nested</code>.\nMessage is not canonically encoded.\n<code>NULL</code> tag: <code>5</code>.\n<code>NumericString</code> tag: <code>18</code>.\nLength of <code>1</code>\nLength of <code>1</code>.\n<code>OBJECT IDENTIFIER</code> tag: <code>6</code>.\n<code>OCTET STRING</code> tag: <code>4</code>.\nOID is improperly encoded.\nUnknown OID.\nContains the success value\nInteger overflow occurred (library bug!).\nMessage is longer than this library’s internal limits …\nPEM encoding errors.\n<code>Reader</code> type which decodes PEM on-the-fly.\n<code>Writer</code> type which outputs PEM-encoded data.\nPermission denied reading file.\n<code>PrintableString</code> tag: <code>19</code>.\n<code>PRIVATE</code>: types whose meaning is specific to a given …\nPrivate tag number.\nReader trait which reads DER-encoded input.\nReader does not support the requested operation.\n<code>REAL</code> tag: <code>9</code>.\nResult type.\nSecret <code>Document</code> type.\nMarker trait for ASN.1 <code>SEQUENCE</code>s.\n<code>SEQUENCE</code> tag: <code>16</code>.\n<code>SET</code> and <code>SET OF</code> tag: <code>17</code>.\n<code>SET</code> cannot contain duplicates.\n<code>SET</code> ordering error: items not in canonical order.\n<code>Reader</code> which consumes an input byte slice.\n<code>Writer</code> which encodes DER into a mutable output byte slice.\nASN.1 tag\nASN.1 tags.\nTagging modes: <code>EXPLICIT</code> versus <code>IMPLICIT</code>.\nUnknown tag mode.\nASN.1 tag numbers (i.e. lower 5 bits of a <code>Tag</code>).\nInvalid tag number.\nUnexpected tag.\nUnknown/unsupported tag.\nTypes which have an ASN.1 <code>Tag</code>.\n<code>TeletexString</code> tag: <code>20</code>.\nUndecoded trailing data at end of message.\n<code>UNIVERSAL</code>: built-in types whose meaning is the same in all …\n<code>UTCTime</code> tag: <code>23</code>.\nUTF-8 errors.\n<code>UTF8String</code> tag: <code>12</code>.\nUnexpected value.\nDER value ordering trait.\n<code>VideotexString</code> tag: <code>21</code>.\n<code>VisibleString</code> tag: <code>26</code>.\nWriter trait which outputs encoded DER.\nLength of <code>0</code>\nLength of <code>0</code>.\nCreate an <code>APPLICATION</code> tag with this tag number.\nModule containing all of the various ASN.1 built-in types …\nAssert that this <code>Tag</code> matches the provided expected tag.\nAnnotate an <code>ErrorKind</code> with context about where it occurred,\nIs the provided <code>Tag</code> decodable as a variant of this <code>CHOICE</code>?\nGet the <code>Class</code> that corresponds to this <code>Tag</code>.\nAttempt to decode an ASN.1 <code>CONTEXT-SPECIFIC</code> field with the …\nCreate a <code>CONTEXT-SPECIFIC</code> tag with this tag number.\nEncode a <code>CONTEXT-SPECIFIC</code> field with the provided tag …\nGet the day.\nAttempt to decode this message using the provided decoder.\nDecode a value which impls the <code>Decode</code> trait.\nAttempt to decode this <code>AnyRef</code> type into the inner value.\nAttempt to decode this <code>Any</code> type into the inner value.\nAttempt to decode this message using the provided <code>Reader</code>.\nReturn an <code>Ordering</code> between <code>self</code> and <code>other</code> when serialized …\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode a value which impls the <code>Encode</code> trait.\nEncode the provided type as an <code>Any</code> value.\nEncode this value to the provided byte slice, returning a …\nEncode this message as ASN.1 DER, appending it to the …\nEncode value (sans [<code>Tag</code>]+<code>Length</code> header) as ASN.1 DER using …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nReturn an error with the given <code>ErrorKind</code>, annotating it …\nReturn an error with the given <code>ErrorKind</code>, annotating it …\nReturn an error with the given <code>ErrorKind</code>, annotating it …\nFinish decoding, returning the given value if there is no …\nFinish encoding PEM, writing the post-encapsulation …\nFinish encoding to the buffer, returning a slice …\nGet the length of DER Tag-Length-Value (TLV) encoded data …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse <code>Self</code> from the provided DER-encoded byte slice.\nTry to decode this type from PEM.\nInstantiate from <code>SystemTime</code>.\nCompute a <code>DateTime</code> from the given <code>Duration</code> since the …\nGet the <code>Header</code> used to encode this value.\nGet the hour.\nCreate a new <code>ErrorKind::Incomplete</code> for the given length.\nGet the length of the input.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs this an application tag?\nDoes this tag represent a constructed (as opposed to …\nIs this a context-specific tag?\nIs this length definite?\nDid the decoding operation fail due to an error?\nDid the decoding operation fail due to an error?\nHave we read all of the input data?\nIs this length indefinite?\nIs this value an ASN.1 <code>NULL</code> value?\nIs this value an ASN.1 <code>NULL</code> value?\nIs this a private tag?\nIs this a universal tag?\nIs this length equal to zero?\nGet the <code>ErrorKind</code> which occurred.\nLength of the encoded value\nCreate an <code>Error</code> for an invalid <code>Length</code>.\nGet the minutes.\nGet the month.\nCreate a new PEM writer which outputs into the provided …\nCreate a new <code>AnyRef</code> from the provided <code>Tag</code> and DER bytes.\nCreate a new <code>Any</code> from the provided <code>Tag</code> and DER bytes.\nCreate a new <code>DateTime</code> from the given UTC time components.\nCreate a new <code>Error</code>.\nCreate a new <code>Header</code> from a <code>Tag</code> and a specified length.\nCreate a new <code>Length</code> for any value which fits inside of a …\nCreate a definite length from a type which can be …\nCreate a new PEM reader which decodes data on-the-fly.\nCreate a new slice reader for the given byte slice.\nCreate a new tag number (const-friendly).\nCreate a new encoder with the given byte slice as a …\nCreate an <code>Error</code> for an non-canonical value with the ASN.1 …\n<code>Any</code> representation of the ASN.1 <code>NULL</code> type.\nGet the <code>TagNumber</code> (lower 6-bits) for this tag.\nGet the octet encoding for this <code>Tag</code>.\nOffset within the original input stream.\nPeek at the next byte of input without modifying the …\nPeek forward in the input data, attempting to decode a …\nPeek at the next byte in the decoder and attempt to decode …\nGet the position within the buffer.\nGet the position inside of the message where the error …\nCreate a <code>PRIVATE</code> tag with this tag number.\nRead a single byte.\nAttempt to read input data, writing it into the provided …\nRead nested data of the given length.\nAttempt to read data borrowed directly from the input as a …\nRead a byte vector of the given length.\nA module for working with referenced data.\nGet the number of bytes still remaining in the buffer.\nPerform saturating addition of two lengths.\nPerform saturating subtraction of two lengths.\nGet the seconds.\nRead an ASN.1 <code>SEQUENCE</code>, creating a nested <code>Reader</code> for the …\nAttempt to decode this value an ASN.1 <code>SEQUENCE</code>, creating a …\nAttempt to decode this value an ASN.1 <code>SEQUENCE</code>, creating a …\nEncode an ASN.1 <code>SEQUENCE</code> of the given length.\nGet the ASN.1 tag that this type is encoded with.\nTag representing the type of the encoded value\nObtain a slice of bytes contain a complete TLV production …\nEncode this type as DER, returning a byte vector.\nTry to encode this type as PEM.\nConvert to <code>SystemTime</code>.\nGet the PEM label which will be used in the encapsulation …\nGet the PEM label which will be used in the encapsulation …\nCreate an <code>Error</code> because the current tag was unexpected, …\nCompute <code>Duration</code> since <code>UNIX_EPOCH</code> from the given calendar …\nGet the raw value for this <code>AnyRef</code> type as a byte slice.\nAllow access to value\nGet the inner value.\nReturn an <code>Ordering</code> between value portion of TLV-encoded …\nReturn an error for an invalid value with the given tag.\nCreate an <code>Error</code> for an invalid value with the ASN.1 type …\nCompute the length of this value (sans [<code>Tag</code>]+<code>Length</code> …\nWrite the given DER-encoded bytes as output.\nWrite a single byte.\nGet the year.\nActual tag encountered in the message.\nActual length of the message buffer currently being …\nRaw byte value of the tag.\nLength of the decoded data.\nTag the decoder was expecting (if there is a single such …\nExpected message length.\nOID value that was unrecognized by a parser for a …\nTotal length of the remaining data left in the buffer.\nTag of the value being decoded.\nTag of the value which is not canonically encoded.\nTag of the unexpected value.\nIs this tag constructed? (vs primitive).\nIs this tag constructed? (vs primitive).\nIs this tag constructed? (vs primitive).\nTag number.\nTag number.\nTag number.\nASN.1 <code>ANY</code>: represents any explicitly tagged ASN.1 value.\nASN.1 <code>ANY</code>: represents any explicitly tagged ASN.1 value.\nOwned form of ASN.1 <code>BIT STRING</code> type.\nIterator over the bits of a <code>BitString</code>.\nASN.1 <code>BIT STRING</code> type.\nASN.1 <code>BMPString</code> type.\nASN.1 <code>CHOICE</code> denotes a union of one or more possible …\nContext-specific field which wraps an owned inner value.\nContext-specific field reference.\nASN.1 <code>GeneralizedTime</code> type.\nASN.1 <code>IA5String</code> type.\nASN.1 <code>IA5String</code> type.\nSigned arbitrary precision ASN.1 <code>INTEGER</code> type.\nSigned arbitrary precision ASN.1 <code>INTEGER</code> reference type.\nLength of an RFC 5280-flavored ASN.1 DER-encoded <code>UtcTime</code>.\nMaximum number of unused bits allowed.\nMaximum number of unused bits allowed.\nMaximum year that can be represented as a <code>UTCTime</code>.\nASN.1 <code>NULL</code> type.\nObject identifier (OID).\nASN.1 <code>OCTET STRING</code> type: owned form..\nASN.1 <code>OCTET STRING</code> type: borrowed form.\nASN.1 <code>PrintableString</code> type.\nASN.1 <code>PrintableString</code> type.\nMarker trait for ASN.1 <code>SEQUENCE</code>s.\nASN.1 <code>SEQUENCE OF</code> backed by an array.\nIterator over the elements of an <code>SequenceOf</code>.\nThe <code>SequenceRef</code> type provides raw access to the octets …\nASN.1 <code>SET OF</code> backed by an array.\nIterator over the elements of an <code>SetOf</code>.\nASN.1 <code>SET OF</code> backed by a <code>Vec</code>.\nASN.1 <code>TeletexString</code> type.\nASN.1 <code>TeletexString</code> type.\nUnsigned arbitrary precision ASN.1 <code>INTEGER</code> type.\nUnsigned arbitrary precision ASN.1 <code>INTEGER</code> reference type.\nASN.1 <code>UTCTime</code> type.\nASN.1 <code>UTF8String</code> type.\nASN.1 <code>VideotexString</code> type.\nAdd an element to this <code>SequenceOf</code>.\nAdd an item to this <code>SetOf</code>.\nAdd an element to this <code>SetOfVec</code>.\nBorrow the inner byte slice.\nBorrow the inner byte slice.\nBorrow the encoded UCS-2 as bytes.\nBorrow the inner byte slice which contains the least …\nBorrow the inner byte slice which contains the least …\nBorrow the inner byte slice which contains the least …\nBorrow the inner byte slice which contains the least …\nBorrow the inner byte slice.\nBorrow the inner byte slice.\nBorrow the elements of this <code>SetOfVec</code> as a slice.\nGet the length of this <code>BIT STRING</code> in bits.\nGet the length of this <code>BIT STRING</code> in bits.\nIterator over the bits of this <code>BIT STRING</code>.\nIterator over the bits of this <code>BIT STRING</code>.\nGet the number of bytes/octets needed to represent this …\nIs the provided <code>Tag</code> decodable as a variant of this <code>CHOICE</code>?\nGet an iterator over characters in the string.\nGet an iterator over the <code>u16</code> codepoints.\nAttempt to decode an <code>EXPLICIT</code> ASN.1 <code>CONTEXT-SPECIFIC</code> field …\nAttempt to decode an <code>IMPLICIT</code> ASN.1 <code>CONTEXT-SPECIFIC</code> field …\nParse <code>T</code> from this <code>OCTET STRING</code>’s contents.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nExtend a <code>SetOfVec</code> using an iterator.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new ASN.1 <code>BIT STRING</code> from the given bytes.\nCreate a new ASN.1 <code>BIT STRING</code> from the given bytes.\nCreate a <code>GeneralizedTime</code> from a <code>DateTime</code>.\nCreate a <code>UtcTime</code> from a <code>DateTime</code>.\nCreate a new <code>SetOfVec</code> from the given iterator.\nInstantiate from <code>SystemTime</code>.\nInstantiate from <code>SystemTime</code>.\nCreate a new <code>BmpString</code> from its UCS-2 encoding.\nCreate a new <code>GeneralizedTime</code> given a <code>Duration</code> since …\nCreate a new <code>UtcTime</code> given a <code>Duration</code> since <code>UNIX_EPOCH</code> …\nCreate a new <code>BmpString</code> from a UTF-8 string.\nGet an element of this <code>SequenceOf</code>.\nGet the nth element from this <code>SetOf</code>.\nGet the nth element from this <code>SetOfVec</code>.\nIs the number of unused bits a value other than 0?\nIs the number of unused bits a value other than 0?\nInsert an item into this <code>SetOf</code>.\nInsert an item into this <code>SetOfVec</code>. Must be unique.\nInsert an item into this <code>SetOf</code>.\nInsert an item into this <code>SetOfVec</code>. Must be unique.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nObtain the inner bytes.\nTake ownership of the octet string.\nConvert this <code>SetOfVec</code> into the inner <code>Vec</code>.\nIs the inner byte slice empty?\nIs the inner byte slice empty?\nIs the inner byte slice empty?\nIs the inner byte slice empty?\nIs the inner byte slice empty?\nIs the inner byte slice empty?\nIs the inner byte slice empty?\nIs the inner byte slice empty?\nIs this <code>SequenceOf</code> empty?\nIs this <code>SetOf</code> empty?\nIs this <code>SetOfVec</code> empty?\nIterate over the elements in this <code>SequenceOf</code>.\nIterate over the elements of this <code>SetOf</code>.\nIterate over the elements of this <code>SetOfVec</code>.\nGet the length of this <code>IntRef</code> in bytes.\nGet the length of this <code>Int</code> in bytes.\nGet the length of this <code>UintRef</code> in bytes.\nGet the length of this <code>Uint</code> in bytes.\nGet the length of the inner byte slice.\nGet the length of the inner byte slice.\nNumber of elements in this <code>SequenceOf</code>.\nNumber of elements in this <code>SetOf</code>.\nNumber of elements in this <code>SetOfVec</code>.\nCreate a new ASN.1 <code>BIT STRING</code> from a byte slice.\nCreate a new ASN.1 <code>BIT STRING</code> from a byte slice.\nCreate a new <code>IA5String</code>.\nCreate a new <code>IA5String</code>.\nCreate a new <code>IntRef</code> from a byte slice.\nCreate a new <code>Int</code> from a byte slice.\nCreate a new <code>UintRef</code> from a byte slice.\nCreate a new <code>Uint</code> from a byte slice.\nCreate a new ASN.1 <code>OCTET STRING</code> from a byte slice.\nCreate a new ASN.1 <code>OCTET STRING</code>.\nCreate a new ASN.1 <code>PrintableString</code>.\nCreate a new ASN.1 <code>PrintableString</code>.\nCreate a new <code>SequenceOf</code>.\nCreate a new <code>SetOf</code>.\nCreate a new <code>SetOfVec</code>.\nCreate a new ASN.1 <code>TeletexString</code>.\nCreate a new ASN.1 <code>TeletexString</code>.\nCreate a new ASN.1 <code>UTF8String</code>.\nCreate a new ASN.1 <code>VideotexString</code>.\nBorrow the raw bytes of this <code>BIT STRING</code>.\nBorrow the raw bytes of this <code>BIT STRING</code>.\nTag mode: <code>EXPLICIT</code> VS <code>IMPLICIT</code>.\nTag mode: <code>EXPLICIT</code> VS <code>IMPLICIT</code>.\nContext-specific tag number sans the leading <code>0b10000000</code> …\nContext-specific tag number sans the leading <code>0b10000000</code> …\nConvert this <code>GeneralizedTime</code> into a <code>DateTime</code>.\nConvert this <code>UtcTime</code> into a <code>DateTime</code>.\nConvert to <code>SystemTime</code>.\nConvert to <code>SystemTime</code>.\nGet the duration of this timestamp since <code>UNIX_EPOCH</code>.\nGet the duration of this timestamp since <code>UNIX_EPOCH</code>.\nGet the number of unused bits in this byte slice.\nGet the number of unused bits in the octet serialization …\nValue of the field.\nValue of the field.\nWidth at which the Base64 body of RFC7468-compliant PEM is …\nBase64-related errors.\nBuffered Base64 decoder type.\nBuffered Base64 encoder type.\nCarriage return: <code>\\r</code> (Pre-OS X Macintosh)\nCarriage return + line feed: <code>\\r\\n</code> (Windows)\nCharacter encoding-related errors.\nBuffered PEM decoder.\nErrors in the encapsulated text (which aren’t …\nBuffered PEM encoder.\nContains the error value\nPEM errors.\nHeader detected in the encapsulated text.\nLine feed: <code>\\n</code> (Unix OSes)\nInvalid label.\nInvalid length.\nLine endings: variants of newline characters that can be …\nContains the success value\nExpected PEM type label for a given document, e.g. …\nMarker trait for types with an associated PEM type label.\nErrors in the post-encapsulation boundary.\nErrors in the pre-encapsulation boundary.\n“Preamble” (text before pre-encapsulation boundary) …\nResult type with the <code>pem-rfc7468</code> crate’s <code>Error</code> type.\nUnexpected PEM type label.\nBorrow the inner <code>Base64Encoder</code>.\nDecode a PEM document according to RFC 7468’s “Strict…\nDecode data into the provided output buffer.\nDecode the encapsulation boundaries of a PEM document …\nDecode all of the remaining data in the input buffer into …\nDecode a PEM document according to RFC 7468’s “Strict…\nCompute the length of a PEM encoded document which …\nCompute the length of a PEM encoded document with the …\nEncode a PEM document according to RFC 7468’s “Strict…\nEncode the provided input data.\nEncode a PEM document according to RFC 7468’s “Strict…\nGet the length of a PEM encoded document with the given …\nFinish encoding PEM, writing the post-encapsulation …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAre we finished decoding the PEM input?\nCreate a new PEM <code>Encoder</code> with the default options which …\nCreate a new PEM <code>Decoder</code> with the default options.\nCreate a new PEM <code>Encoder</code> which wraps at the given line …\nCreate a new PEM <code>Decoder</code> which wraps at the given line …\nGet the decoded length of the remaining PEM data after …\nGet the PEM type label used for this document.\nGet the PEM type label for the input document.\nValidate that a given label matches the expected label.\nType label that was expected.\nThe resulting type referencing back to Self\nThe resulting type after obtaining ownership.\nA trait for borrowing data from an owned struct\nA trait for cloning a referenced structure and getting …\nCreates a new object referencing back to the self for …\nCreates a new object taking ownership of the data\n<code>AlgorithmIdentifier</code> for this structure.\nX.509 <code>AlgorithmIdentifier</code> as defined in RFC 5280 Section …\n<code>AlgorithmIdentifier</code> reference which has <code>Any</code> parameters.\n<code>AlgorithmIdentifier</code> reference which has <code>AnyRef</code> parameters.\n<code>AlgorithmIdentifier</code> with <code>ObjectIdentifier</code> parameters.\nAlgorithm parameters are missing.\nASN.1 DER-related errors.\nReturns <code>AlgorithmIdentifier</code> associated with the structure.\nParse a public key object from an encoded SPKI document.\nASN.1 DER-encoded document.\nReturns <code>AlgorithmIdentifier</code> associated with the structure.\nReturns <code>AlgorithmIdentifier</code> associated with the signature …\nSerialize a public key object to a SPKI-encoded document.\nContains the error value\nError type\nMalformed cryptographic key contained in a SPKI document.\nObject identifier (OID).\nUnknown algorithm OID.\nContains the success value\nAlgorithm parameters.\nAlgorithm parameters.\nResult type with <code>spki</code> crate’s <code>Error</code> type.\n<code>AlgorithmIdentifier</code> for the corresponding singature system.\nReturns <code>AlgorithmIdentifier</code> associated with the signature …\nReturns the <code>BitString</code> encoding of the signature.\nX.509 <code>SubjectPublicKeyInfo</code> (SPKI) as defined in RFC 5280 …\n<code>SubjectPublicKeyInfo</code> with <code>Any</code> algorithm parameters, and …\n<code>SubjectPublicKeyInfo</code> with <code>AnyRef</code> algorithm parameters, and …\nX.509 <code>AlgorithmIdentifier</code> for the public key type\nX.509 <code>AlgorithmIdentifier</code> for the public key type\nX.509 <code>AlgorithmIdentifier</code> for the public key type\n<code>AlgorithmIdentifier</code> for this structure.\nAssert the <code>algorithm</code> OID is an expected value.\nAssert the values of the <code>algorithm</code> and <code>parameters</code> OIDs.\nAssert <code>parameters</code> is an OID and has the expected value.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nCompute the length of this value in bytes when encoded as …\nReturns the argument unchanged.\nReturns the argument unchanged.\nDeserialize object from ASN.1 DER-encoded […\nDeserialize PEM-encoded [<code>SubjectPublicKeyInfo</code>].\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAlgorithm OID, i.e. the <code>algorithm</code> field in the …\nAlgorithm OID, i.e. the <code>algorithm</code> field in the …\nAlgorithm OID, i.e. the <code>algorithm</code> field in the …\nAlgorithm OID, i.e. the <code>algorithm</code> field in the …\nConvert to a pair of <code>ObjectIdentifier</code>s.\nAlgorithm <code>parameters</code>.\nAlgorithm <code>parameters</code>.\nAlgorithm <code>parameters</code>.\nAlgorithm <code>parameters</code>.\nGet the <code>parameters</code> field as an <code>AnyRef</code>.\nGet the <code>parameters</code> field as an <code>ObjectIdentifier</code>.\nLoad public key object from an ASN.1 DER-encoded file on …\nLoad public key object from a PEM-encoded file on the …\n<code>AlgorithmIdentifier</code> for the corresponding singature system.\nPublic key data\nPublic key data\nPublic key data\n<code>BitString</code> encoding for this signature.\nSerialize a <code>Document</code> containing a SPKI-encoded public key.\nSerialize this public key as PEM-encoded SPKI with the …\nWrite ASN.1 DER-encoded public key to the given path\nWrite ASN.1 DER-encoded public key to the given path\nUnrecognized OID value found in e.g. a SPKI …\nAccess to the affine coordinates of an elliptic curve …\nAffine point type for a given curve with a <code>CurveArithmetic</code> …\nElliptic curve point in affine coordinates.\nNormalize point(s) in projective representation by …\nShould point compaction be applied by default?\nShould point compression be applied by default?\nElliptic curve with an arithmetic implementation.\nDecompact an elliptic curve point from an x-coordinate.\nDecompress an elliptic curve point.\nDouble a point (i.e. add it to itself)\nField element representation.\nNon-identity point type.\nThe output of the batch normalization; a container of …\nPoint compaction settings.\nPoint compression settings.\nProjective point type for a given curve with a …\nElliptic curve point in projective coordinates.\nScalar field modulo this curve’s order.\nPerform a batched conversion to affine representation on a …\nAttempt to decompact an elliptic curve point\nAttempt to decompress an elliptic curve point.\nDouble this point.\nReturns the argument unchanged.\nDecode a <code>NonIdentity</code> from its encoding.\nCalls <code>U::from(self)</code>.\nCreate a <code>NonIdentity</code> from a point.\nGenerate a random <code>NonIdentity&lt;ProjectivePoint&gt;</code>.\nConverts this element into its affine representation.\nConverts this element to its curve representation.\nReturn wrapped point.\nGet the affine x-coordinate as a serialized field element.\nIs the affine y-coordinate odd?\nScalar blinded with a randomly generated masking value.\nInstantiate a scalar from an unsigned integer without …\nIs this scalar greater than n / 2?\nNon-zero scalar type.\nScalar field element for a particular elliptic curve.\nGeneric scalar type with primitive functionality.\nUnsigned integer type (i.e. <code>Curve::Uint</code>)\nReturns the argument unchanged.\nInstantiate scalar from an unsigned integer without …\nCalls <code>U::from(self)</code>.\nIs this scalar greater than or equal to n / 2?\nCreate a new <code>BlindedScalar</code> from a scalar and a …\nCompact curve point\nCompact point (<code>0x05</code>)\nCompressed curve point\nCompressed point with even y-coordinate (<code>0x02</code>)\nCompressed point with odd y-coordinate (<code>0x03</code>)\nEncoded elliptic curve point with point compression.\nSize of a compressed elliptic curve point.\nSize of a compressed point for the given elliptic curve …\nEnum representing the coordinates of either compressed or …\nEncoded elliptic curve point sized appropriately for a …\nTrait for deserializing a value from a SEC1 encoded curve …\nIdentity point (a.k.a. point at infinity)\nIdentity point (<code>0x00</code>)\nTrait for supported modulus sizes which precomputes the …\nTag byte used by the <code>Elliptic-Curve-Point-to-Octet-String</code> …\nTrait for serializing a value to a SEC1 encoded curve …\nTrait for serializing a value to a SEC1 encoded curve …\nUncompressed curve point\nUncompressed point (<code>0x04</code>)\nEncoded elliptic curve point <em>without</em> point compression.\nSize of an uncompressed elliptic curve point.\nSize of an uncompressed point for the given elliptic curve …\nSize of an untagged point for given elliptic curve, i.e. …\nValidate that the given <code>EncodedPoint</code> represents the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nDeserialize the type this trait is impl’d on from an …\nParse a tag value from a byte\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs this point compact?\nIs this point compressed?\nIs this point the identity point?\nCompute the expected total message length for a message …\nGet the tag octet needed to encode this set of <code>Coordinates</code>\nSerialize this value as a SEC1 <code>EncodedPoint</code>, optionally …\nSerialize this value as a SEC1 <code>EncodedPoint</code>, optionally …\nValidate that the given <code>EncodedPoint</code> is a valid public key …\nx-coordinate\nx-coordinate\nx-coordinate\ny-coordinate\nIs the y-coordinate odd?\nAffine point whose coordinates are represented by the …\nProjective point whose coordinates are represented by the …\nImplements the complete addition formula from …\nImplements the complete mixed addition formula from …\nImplements the exception-free point doubling formula from …\nConvenience wrapper trait covering functionality of …\nSHA-224 hasher.\nSHA-256 hasher.\nCore block-level SHA-256 hasher with variable output size.\nSHA-384 hasher.\nSHA-512 hasher.\nCore block-level SHA-512 hasher with variable output size.\nSHA-512/224 hasher.\nSHA-512/256 hasher.\nProcess input data in a chained manner.\nCompute hash of <code>data</code>.\nRetrieve result and consume hasher instance.\nWrite result into provided array and consume the hasher …\nWrite result into provided array and reset the hasher …\nRetrieve result and reset hasher instance.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate new hasher instance.\nCreate new hasher instance which has processed the …\nGet output size of the hasher\nReset hasher instance to its initial state.\nProcess data, updating the internal state.\n<code>ecdsa</code> error.\n<code>hex</code> error.\n<code>std::io</code> error.\nAn Ethereum private-public key pair which can be used for …\nError thrown by <code>LocalSigner</code>.\nA signer instantiated with a locally stored private key.\nReturns this signer’s address.\nBorrow the secret <code>NonZeroScalar</code> value for this key.\nReturns this signer’s chain ID.\nReturns this signer’s credential.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>LocalSigner</code> instance from a raw scalar …\nCreates a new <code>LocalSigner</code> instance from a raw scalar …\nCreates a new <code>LocalSigner</code> instance from a <code>SigningKey</code>.\nCreates a new <code>LocalSigner</code> instance from a raw scalar …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this signer and returns its credential.\nConstruct a new credential with an external <code>PrehashSigner</code>.\nCreates a new random keypair seeded with <code>rand::thread_rng()</code>…\nCreates a new random keypair seeded with the provided RNG.\nSerialize this <code>LocalSigner</code>’s <code>SigningKey</code> as a <code>B256</code> byte …\nSerialize this <code>LocalSigner</code>’s <code>SigningKey</code> as a <code>FieldBytes</code> …\nConverts an ECDSA public key to its corresponding Ethereum …\nConvert a raw, uncompressed public key to its …\nConverts an ECDSA private key to its corresponding …\nWhether the event is anonymous.\nThe ABI representation of this type.\nArray out of bounds access.\nUsed by the <code>assert()</code> builtin.\nTrailing bytes in deserialization buffer.\nThe number of variants in the enum.\nThe number of topics.\nThe number of variants.\nThe number of variants.\nA generic contract error.\nA detailed contract error, including a specific revert or …\nA detailed contract error, including a specific revert or …\nA contract’s custom error.\nA contract’s custom error.\nThe <code>TokenSeq</code> type corresponding to the tuple.\nThe underlying tuple type which represents this event’s …\nDivision or modulo by zero.\nThe statically-known ABI-encoded size of the type.\nEIP-712 domain attributes used in determining the domain …\nEmpty array pop.\nEnum conversion error.\nContains the error value\nABI Encoding and Decoding errors.\nA Solidity event topic.\nHex error.\nGeneric / unspecified error.\nA generic contract error.\nRepresents the reason for a revert in a generic contract …\nInvalid enum value.\nCalling invalid internal function.\nCould not decode an event from log topics.\nExtension trait for ABI representation.\nThe minimum length of the data for this type.\nThe name of this type.\nThe name of this type.\nThe struct name.\nContains the success value\nOther errors.\nOverran deserialization buffer.\nThe statically-known Non-standard Packed Mode ABI-encoded …\nA Solidity panic.\nA panic. See <code>Panic</code> for more information.\nA panic. See <code>Panic</code> for more information.\nRepresents a Solidity panic. Same as the Solidity …\nThe underlying tuple type which represents the error’s …\nThe underlying tuple type which represents this type’s …\nThe underlying tuple type which represents this type’s …\nRepresents a raw string message as the reason for the …\nRepresents a raw string message as the reason for the …\nABI Decoding recursion limit exceeded.\nValidation reserialization did not match input.\nAllocation failed.\nResource error (too large allocation or too large array).\nABI result type.\nThe function’s return struct.\nThe returns’ corresponding TokenSeq type.\nThe underlying tuple type which represents this type’s …\nRepresents a standard Solidity revert. These are thrown by …\nA generic revert. See <code>Revert</code> for more information.\nA generic revert. See <code>Revert</code> for more information.\nRepresents the reason for a revert in a smart contract.\nThe corresponding Rust type.\nThe error selector: <code>keccak256(SIGNATURE)[0..4]</code>\nThe function selector: <code>keccak256(SIGNATURE)[0..4]</code>\nThe error’s ABI signature.\nThe event’s ABI signature.\nThe function’s ABI signature.\nThe event’s ABI signature hash, or selector: …\nThe name of this type in Solidity.\nIterator over the function or error selectors of a …\nA Solidity function call.\nA Solidity constructor.\nA Solidity enum. This is always a wrapper around a <code>u8</code>.\nA Solidity custom error.\nSolidity event.\nA collection of <code>SolEvent</code>s.\nA collection of ABI-encodable call-like types. This …\nA Solidity struct.\nA Solidity type.\nThe Solidity type that this type corresponds to.\nA Solidity value.\nInvalid encoding in storage.\nThe corresponding <code>TokenSeq</code> type.\nThe arguments’ corresponding TokenSeq type.\nThe arguments’ corresponding TokenSeq type.\nThe corresponding ABI token type.\nA list of Solidity event topics.\nThe underlying tuple type which represents this event’s …\nA typecheck detected a word that does not match the data …\nArithmetic underflow or overflow.\nUnknown selector.\nThe ABI word type.\nEthereum ABI codec implementation.\nReturns the ABI representation of this type.\nABI decode the enum from the given buffer.\nABI decode this error’s arguments from the given slice, …\nABI decode this call’s arguments from the given slice, …\nABI-decodes the given data into one of the variants of <code>self</code>…\nABI-decode this type from the given data.\nABI-decodes the dynamic data of this event from the given …\nABI-decodes the dynamic data of this event from the given …\nABI-decode this type from the given data.\nABI-decode this type from the given data, with validation.\nABI-decodes the given data into one of the variants of <code>self</code>…\nABI decode this call’s arguments from the given slice, …\nABI decode this call’s arguments from the given slice, …\nABI-decodes the given data into one of the variants of <code>self</code>…\nABI decode this error’s arguments from the given slice, …\nABI decode this call’s arguments from the given slice, …\nABI decode this call’s return values from the given …\nABI decode this call’s return values from the given …\nABI-decode this type from the given data.\nABI-decode this type from the given data, with validation.\nABI decode the enum from the given buffer, with validation.\nABI decode this error’s arguments from the given slice, …\nABI decode this call’s arguments from the given slice, …\nABI-decodes the given data into one of the variants of <code>self</code>…\nABI-decode this type from the given data, with validation.\nABI encode the enum.\nABI encode the error to the given buffer <strong>with</strong> its selector.\nABI encode the call to the given buffer <strong>with</strong> its selector.\nABI encode the call to the given buffer.\nABI-encodes <code>self</code> into the given buffer.\nABI-encodes the value.\nNon-standard Packed Mode ABI encoding.\nNon-standard Packed Mode ABI encoding.\nEncodes an ABI sequence suitable for function parameters.\nABI-encodes <code>self</code> into the given buffer, <em>without</em> any …\nABI encode the enum into the given buffer.\nABI encode the error to the given buffer <strong>without</strong> its …\nABI encode the call to the given buffer <strong>without</strong> its …\nABI encode the call’s return value.\nABI encode the call’s return values.\nEncodes an ABI sequence.\nThe size of the encoded data, <em>without</em> any selectors.\nThe size of the error params when encoded in bytes, <strong>without</strong>…\nThe size of the ABI-encoded dynamic data in bytes.\nThe size of the encoded data in bytes, <strong>without</strong> its …\nThe size of the encoded data in bytes.\nCalculate the ABI-encoded size of the data.\nReturns the <code>ContractError</code> if this type is a …\nReturns an immutable reference to the inner custom error …\nReturns a mutable reference to the inner custom error if …\nReturns an immutable reference to the inner <code>Panic</code> if <code>self</code> …\nReturns a mutable reference to the inner <code>Panic</code> if <code>self</code> …\nReturns the raw string error message if this type is a …\nReturns an immutable reference to the inner <code>Revert</code> if <code>self</code> …\nReturns a mutable reference to the inner <code>Revert</code> if <code>self</code> …\nReturns the panic code’s string representation.\nThe EIP-155 chain ID. The user-agent should refuse signing …\nCheck that the event’s signature matches the given …\nThe Solidity panic code.\nInstantiates a new error with a static str.\nDecodes and retrieves the reason for a revert from the …\nDecode the event from the given log object.\nDecode the events from the given log object.\nDecode the event from the given log object.\nDecode the events from the given log info.\nDecode the event from the given log info.\nDecode the event from the given log info, with validation.\nDecodes and retrieves the reason for a revert from the …\nDecode the topics of this event from the given data.\nDetokenize the topics into a tuple of rust types.\nDetokenize this type’s value from the given token.\nDetokenize a value from the given token.\nReturns component EIP-712 types. These types are used to …\nEncode this data according to EIP-712 <code>encodeData</code> rules, …\nConvenience macro to instantiate an EIP-712 domain.\nEncodes this domain using EIP-712 <code>encodeData</code>.\nThe EIP-712-encoded type string.\nCalculates the EIP-712 <code>hashStruct</code> for this value.\nReturn the root EIP-712 type. This type is used to …\nCalculate the EIP-712 signing hash for this struct. Note …\nCalculates the EIP-712 <code>typeHash</code> for this struct.\nABI-encode the dynamic data of this event.\nABI-encode the dynamic data of this event into the given …\nTransform ca <code>Log</code> containing this event into a <code>Log</code> …\nEncode this event to a <code>LogData</code>.\nIndexed event parameter encoding.\nEncodes this type as preimage bytes which are then hashed …\nEncode the topics of this event.\nEncode the topics of this event into a fixed-size array.\nEncode the topics of this event into the given buffer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the panic code for the given number if it is a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>self</code> matches <code>CustomError</code>.\nReturns <code>true</code> if <code>self</code> matches <code>CustomError</code>.\nReturns <code>true</code> if <code>self</code> matches <code>Panic</code>.\nReturns <code>true</code> if <code>self</code> matches <code>Panic</code>.\nReturns <code>true</code> if <code>self</code> matches <code>Revert</code>.\nReturns <code>true</code> if <code>self</code> matches <code>Revert</code>.\nReturns the PanicKind if this panic code is a known …\nThe user readable name of signing domain, i.e. the name of …\nConvert from the tuple type used for ABI encoding and …\nConvert decoded rust data to the event type.\nConvert from the tuple type used for ABI encoding and …\nConvert from the tuple type used for ABI encoding and …\nConvert decoded rust data to the event type.\nReturns the revert reason string, or <code>&quot;&lt;empty&gt;&quot;</code> if empty.\nThe reason string, provided by the Solidity contract.\nA disambiguating salt for the protocol. This can be used …\nThe selector of this instance.\nThe selector of this type at the given index, used in …\nReturns an iterator over the selectors of this type.\nGenerate types that implement <code>alloy-sol-types</code> traits, …\nSolidity types.\nThe name of the associated Solidity type.\nThe name of the associated Solidity type.\nReturns the reason for a revert as a string.\nConvert to the token type used for EIP-712 encoding and …\nTokenize the call’s arguments.\nTokenize the call’s arguments.\nTokenize the enum.\nTokenizes the given value into this type’s token.\nTokenize the event’s non-indexed parameters.\nTokenize the call’s return values.\nThe number of bytes this type occupies in another topic’…\nThe event’s topics.\nReturns an error if the given selector is not known to …\nInstantiates a new <code>Error::TypeCheckFail</code> with the provided …\nInstantiates a new <code>Error::TypeCheckFail</code> with the provided …\nInstantiates a new <code>Error::TypeCheckFail</code> with the provided …\nInstantiates a new <code>Error::UnknownSelector</code> with the …\nUtilities used by different modules.\nReturns <code>true</code> if the given selector is known to this type.\nReturns <code>true</code> if the given token can be detokenized with …\nThe address of the contract that will verify the signature.\nThe current major version of the signing domain. …\nHex-encoded data.\nThe Solidity type we failed to produce.\nThe invalid log.\nThe maximum valid value.\nThe name of the enum.\nThe name of the enum or event.\nThe type name.\nThe unknown selector.\nThe invalid value.\nTrue if the token represents a dynamically-sized type.\nThe <code>Decoder</code> wraps a byte slice with necessary info to …\nThe ABI encoding of an empty byte array (<code>bytes</code> or <code>string</code>).\nAn ABI encoder.\nThe decoder recursion limit. This is currently hardcoded, …\nEthereum ABI tokens.\nA token composed of a sequence of other tokens.\nABI-decodes a token by wrapping it in a single-element …\nDecode a token from a decoder.\nABI-decodes top-level function args.\nDecodes ABI compliant vector of bytes into vector of …\nABI-decode the token sequence from the encoder.\nABI-encodes a single token.\nABI-encodes a tuple as ABI function params, suitable for …\nABI-encodes a token sequence.\nABI-encode the token sequence into the encoder.\nAppend head words to the encoder.\nCalculate the number of head words.\nAppend tail words to the encoder.\nCalculate the number of tail words.\nEthereum ABI tokens.\nTrue if the token represents a dynamically-sized type.\nA Dynamic Sequence - <code>T[]</code>\nA Fixed Sequence - <code>T[N]</code>\nA Packed Sequence - <code>bytes</code> or <code>string</code>\nEthereum ABI tokens.\nA token composed of a sequence of other tokens.\nA single EVM word - T for any value type.\nDecode a token from a decoder.\nABI-decode the token sequence from the encoder.\nABI-encode the token sequence into the encoder.\nAppend head words to the encoder.\nCalculate the number of head words.\nAppend tail words to the encoder.\nCalculate the number of tail words.\nAddress - <code>address</code>\nArray - <code>T[]</code>\nThe number of bits in the integer: <code>BITS</code>\nThe number of bytes in the integer: <code>BITS / 8</code>\nBool - <code>bool</code>\nSpecifies the number of bytes in a <code>FixedBytes</code> array as a …\nBytes - <code>bytes</code>\nFixedArray - <code>T[M]</code>\nFixedBytes - <code>bytesX</code>\nFunction - <code>function</code>\nThe name of the <code>Int</code> type: <code>int&lt;N&gt;</code>\nInt - <code>intX</code>\nThe signed integer Rust representation.\nSpecifies the number of bits in an <code>Int</code> or <code>Uint</code> as a type.\nThe name of the <code>FixedBytes</code> type: <code>bytes&lt;N&gt;</code>\nThe difference between the representation’s and this …\nString - <code>string</code>\nStatically guarantees that a <code>FixedBytes</code> byte count is …\nStatically guarantees that a <code>Int</code> or <code>Uint</code> bit count is …\nThe name of the <code>Uint</code> type: <code>uint&lt;N&gt;</code>\nUint - <code>uintX</code>\nThe unsigned integer Rust representation.\nThe index of the most significant byte in the Word type.\nDetokenizes a signed integer.\nDetokenizes an unsigned integer.\nABI-encode a signed integer in packed mode.\nABI-encode an unsigned integer in packed mode.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTokenizes a signed integer.\nTokenizes an unsigned integer.\nSee <code>usize::next_multiple_of</code>.\nCalculates the padded length of a slice by rounding its …\nCalculates the padded length of a slice of a specific …\nBasic, bearer or raw authentication in http or websocket …\nBackend connection task has stopped.\nRFC7617 HTTP Basic Auth.\nRFC6750 Bearer Auth.\nType alias for a pin-boxed future, with a <code>Send</code> bound on …\nA boxed, Clone-able <code>Transport</code> trait object.\nCustom error.\nJSON deserialization error.\nJSON deserialization error.\nA transport that dispatches requests to one of two inner …\nTrait that determines how to dispatch a request given two …\nContains the error value\nContains the error value\nServer returned an error response.\nServer returned an error response.\nType for holding HTTP errors such as 429 rate limit error.\nHTTP Error with code and body\nTrait for converting a transport into a boxed transport.\nReturned when a local pre-processing step fails. This …\nReturned when a local pre-processing step fails. This …\nMissing batch response.\nServer returned a null response when a non-null response …\nServer returned a null response when a non-null response …\nContains the success value\nContains the success value\nPin-boxed future.\nPubsub service is not available for the current provider.\nRaw auth string.\nAn RPC error.\nFuture for RPC-level requests.\nThe result of a JSON-RPC request.\nJSON serialization error.\nJSON serialization error.\nA <code>Transport</code> manages the JSON-RPC request/response …\nTransport error.\nTransport error.\nConnection details for a transport.\nA transport error is an <code>RpcError</code> containing a …\nTransport error.\nFuture for transport-level requests.\nA transport result is a <code>Result</code> containing a <code>TransportError</code>.\nRpc server returned an unsupported feature.\nRpc server returned an unsupported feature.\nReturns a reference to the inner transport.\nMake a boxed trait object by cloning this transport.\nFallible conversion to an error response.\nInstantiate a new basic auth from an authority string.\nInstantiate a new <code>TransportError::BackendGone</code>.\nInstantiate a new basic auth from a username and password.\nInstantiate a new bearer auth from the given token.\nThe HTTP response body.\nConvert this transport into a boxed trait object.\nThe type of the future returned by the transport.\nInstantiate a new <code>TransportError</code> from a custom error.\nInstantiate a new <code>TransportError</code> from a custom error.\nInstantiate a new <code>DeserError</code> from a <code>serde_json::Error</code> and …\nInstantiate a new <code>ErrorResp</code> from an error response.\nExtract the auth info from a URL.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConnect to the transport, returning a <code>Transport</code> instance.\nInstantiate a new <code>TransportError::HttpError</code>.\nMacro that return an <code>impl Future</code> type, with a <code>Send</code> bound …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBoxes the transport.\nCheck if the error is a deserialization error.\nCheck if the error is an error response.\nReturns <code>true</code> if the transport connects to a local resource.\nCheck if the error is a local usage error.\nCheck if the error is a null response.\nChecks the <code>status</code> to determine whether the request should …\nAnalyzes the TransportErrorKind and decides if the request …\nCheck if the error is a serialization error.\nChecks the <code>status</code> to determine whether the service was …\nCheck if the error is a transport error.\nCheck if the error is an unsupported feature error.\nModule for housing transport layers.\nInstantiate a new <code>LocalUsageError</code> from a custom error.\nInstantiate a new <code>LocalUsageError</code> from a custom error …\nInstantiate a new <code>TransportError</code> from a missing ID.\nMock transport and utility types.\nInstantiate a new box transport from a suitable transport.\nInstantiate a new dual transport from a suitable transport.\nCreate a new dual transport with a function handler.\nInstantiate a new <code>TransportError::PubsubUnavailable</code>.\nInstantiate a new raw auth from the given token.\nReturns <code>true</code> if the error is potentially recoverable. This …\nInstantiate a new <code>SerError</code> from a <code>serde_json::Error</code>. This …\nThe HTTP status code.\nMisc. utilities for building transports.\nThe underlying serde_json error.\nFor deser errors, the text that failed to deserialize.\nThe underlying serde_json error.\nFor deser errors, the text that failed to deserialize.\nAn asynchronous <code>Client</code> to make Requests with.\nAn Http transport.\nConnection details for a <code>ReqwestTransport</code>.\nAn <code>Http</code> transport using <code>reqwest</code>.\nCreates a <code>ClientBuilder</code> to configure a <code>Client</code>.\nGet a reference to the client.\nConvenience method to make a <code>DELETE</code> request to a URL.\nExecutes a <code>Request</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvenience method to make a <code>GET</code> request to a URL.\nGuess whether the URL is local, based on the hostname.\nConvenience method to make a <code>HEAD</code> request to a URL.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>Http</code> transport.\nConstructs a new <code>Client</code>.\nConvenience method to make a <code>PATCH</code> request to a URL.\nConvenience method to make a <code>POST</code> request to a URL.\nConvenience method to make a <code>PUT</code> request to a URL.\nStart building a <code>Request</code> with the <code>Method</code> and <code>Url</code>.\nSet the client.\nSet the URL.\nGet a reference to the URL.\nCreate a new <code>Http</code> transport with a custom client.\n202 Accepted [RFC9110, Section 15.3.3]\n208 Already Reported [RFC5842, Section 7.1]\n502 Bad Gateway [RFC9110, Section 15.6.3]\n400 Bad Request [RFC9110, Section 15.5.1]\nAn asynchronous request body.\n409 Conflict [RFC9110, Section 15.5.10]\nCONNECT\n100 Continue [RFC9110, Section 15.2.1]\n201 Created [RFC9110, Section 15.3.2]\nAn asynchronous <code>Client</code> to make Requests with.\nA <code>ClientBuilder</code> can be used to create a <code>Client</code> with custom …\nDELETE\n417 Expectation Failed [RFC9110, Section 15.5.18]\nContains the error value\nThe Errors that may occur when processing a <code>Request</code>.\n424 Failed Dependency [RFC4918, Section 11.4]\n403 Forbidden [RFC9110, Section 15.5.4]\n302 Found [RFC9110, Section 15.4.3]\n504 Gateway Timeout [RFC9110, Section 15.6.5]\nGET\n410 Gone [RFC9110, Section 15.5.11]\nHEAD\n<code>HTTP/0.9</code>\n<code>HTTP/1.0</code>\n<code>HTTP/1.1</code>\n<code>HTTP/2.0</code>\n<code>HTTP/3.0</code>\n505 HTTP Version Not Supported [RFC9110, Section 15.6.6]\n418 I’m a teapot [curiously not registered by IANA but …\n226 IM Used [RFC3229, Section 10.4.1]\n507 Insufficient Storage [RFC4918, Section 11.5]\n500 Internal Server Error [RFC9110, Section 15.6.1]\nA trait to try to convert some type into a <code>Url</code>.\n411 Length Required [RFC9110, Section 15.5.12]\n423 Locked [RFC4918, Section 11.3]\n508 Loop Detected [RFC5842, Section 7.2]\n405 Method Not Allowed [RFC9110, Section 15.5.6]\n421 Misdirected Request [RFC9110, Section 15.5.20]\n301 Moved Permanently [RFC9110, Section 15.4.2]\n300 Multiple Choices [RFC9110, Section 15.4.1]\n207 Multi-Status [RFC4918, Section 11.1]\nThe Request Method (VERB)\n511 Network Authentication Required [RFC6585, Section 6]\n203 Non-Authoritative Information [RFC9110, Section 15.3.4]\n406 Not Acceptable [RFC9110, Section 15.5.7]\n510 Not Extended [RFC2774, Section 7]\n404 Not Found [RFC9110, Section 15.5.5]\n501 Not Implemented [RFC9110, Section 15.6.2]\n304 Not Modified [RFC9110, Section 15.4.5]\n204 No Content [RFC9110, Section 15.3.5]\nA configuration for filtering out requests that shouldn’…\n200 OK [RFC9110, Section 15.3.1]\nOPTIONS\nContains the success value\n206 Partial Content [RFC9110, Section 15.3.7]\nPATCH\n413 Payload Too Large [RFC9110, Section 15.5.14]\n402 Payment Required [RFC9110, Section 15.5.3]\n308 Permanent Redirect [RFC9110, Section 15.4.8]\nPOST\n412 Precondition Failed [RFC9110, Section 15.5.13]\n428 Precondition Required [RFC6585, Section 3]\n102 Processing [RFC2518, Section 10.1]\n407 Proxy Authentication Required [RFC9110, Section 15.5.8]\nPUT\nConfiguration of a proxy that a <code>Client</code> should pass …\n416 Range Not Satisfiable [RFC9110, Section 15.5.17]\n431 Request Header Fields Too Large [RFC6585, Section 5]\n408 Request Timeout [RFC9110, Section 15.5.9]\n205 Reset Content [RFC9110, Section 15.3.6]\nA request which can be executed with <code>Client::execute()</code>.\nA builder to construct the properties of a <code>Request</code>.\nA Response to a submitted <code>Request</code>.\nExtension trait for http::response::Builder objects\nA <code>Result</code> alias where the <code>Err</code> case is <code>reqwest::Error</code>.\n303 See Other [RFC9110, Section 15.4.4]\n503 Service Unavailable [RFC9110, Section 15.6.4]\n101 Switching Protocols [RFC9110, Section 15.2.2]\nAn HTTP status code (<code>status-code</code> in RFC 9110 et al.).\n307 Temporary Redirect [RFC9110, Section 15.4.7]\n425 Too early [RFC8470, Section 5.2]\n429 Too Many Requests [RFC6585, Section 4]\nTRACE\n401 Unauthorized [RFC9110, Section 15.5.2]\n451 Unavailable For Legal Reasons [RFC7725, Section 3]\n422 Unprocessable Entity [RFC9110, Section 15.5.21]\n415 Unsupported Media Type [RFC9110, Section 15.5.16]\n426 Upgrade Required [RFC9110, Section 15.5.22]\n414 URI Too Long [RFC9110, Section 15.5.15]\n305 Use Proxy [RFC9110, Section 15.4.6]\nAn upgraded HTTP connection.\nA parsed URL record.\n506 Variant Also Negotiates [RFC2295, Section 8.1]\nRepresents a version of the HTTP spec.\nProxy <strong>all</strong> traffic to the passed URL.\nReturns a reference to the internal data of the <code>Body</code>.\nReturn the serialization of this URL.\nReturn a &amp;str representation of the HTTP method\nReturns a &amp;str representation of the <code>StatusCode</code>\nReturns the <code>u16</code> corresponding to this <code>StatusCode</code>.\nReturn the authority of this URL as an ASCII string.\nEnable HTTP basic authentication.\nSet the <code>Proxy-Authorization</code> header using Basic auth.\nEnable HTTP bearer authentication.\nGet the body.\nSet the request body.\nGet a mutable reference to the body.\nReturns a <code>Client</code> that uses this <code>ClientBuilder</code> …\nBuild a <code>Request</code>, which can be inspected, modified and …\nBuild a <code>Request</code>, which can be inspected, modified and …\nGet the full response body as <code>Bytes</code>.\nReturn whether this URL is a cannot-be-a-base URL, meaning …\nGet the standardised <code>reason-phrase</code> for this status code.\nStream a chunk of the response body.\nSet a timeout for only the connect phase of a <code>Client</code>.\nSet whether connections should emit verbose logs.\nAdds a new Tower <code>Layer</code> to the base connector <code>Service</code> which …\nGet the content-length of this response, if known.\nProvide a custom function to determine what traffic to …\nSet the <code>Proxy-Authorization</code> header to a specified value.\nSets the default headers for every request.\nSerialize with Serde using the internal representation of …\nDNS resolution\nOverride the DNS resolver implementation.\nIf this URL has a host and it is a domain name (not an IP …\nTurn a response into an error if the server returned an …\nTurn a reference to a response into an error if the server …\nReturns a reference to the associated extensions.\nReturns a mutable reference to the associated extensions.\nSend a form body.\nReturn this URL’s fragment identifier, if any.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a slice of bytes to an HTTP method.\nConverts a <code>&amp;[u8]</code> to a status code.\nConvert a directory name as <code>std::path::Path</code> into an URL in …\nReturns a new no-proxy configuration based on environment …\nConvert a file name as <code>std::path::Path</code> into an URL in the …\nAssemble a builder starting from an existing <code>Client</code> and a …\nReturns a new no-proxy configuration based on a <code>no_proxy</code> …\nConverts a u16 to a status code.\nShortcut method to quickly make a <code>GET</code> request.\nReturn whether the URL has an ‘authority’, which can …\nEquivalent to <code>url.host().is_some()</code>.\nHTTP header types\nAdd a <code>Header</code> to this Request.\nGet the headers.\nAdd a set of Headers to the existing ones on this Request.\nGet the <code>Headers</code> of this <code>Response</code>.\nGet a mutable reference to the headers.\nGet a mutable reference to the <code>Headers</code> of this <code>Response</code>.\nReturn the parsed representation of the host for this URL. …\nReturn the string representation of the host (domain or IP …\nProxy all HTTP traffic to the passed URL.\nAllow HTTP/0.9 responses\nSet whether HTTP/1 connections will accept obsolete line …\nSet whether HTTP/1 connections will accept spaces between …\nSets whether invalid header lines should be silently …\nOnly use HTTP/1.\nSend headers as title case instead of lowercase.\nProxy all HTTPS traffic to the passed URL.\nRestrict the Client to be used with HTTPS only requests.\nBind to an interface by <code>SO_BINDTODEVICE</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the serialization of this URL.\nReturns true if the error is related to the request or …\nReturns true if the error is from a type Builder.\nCheck if status is within 400-499.\nReturns true if the error is related to connect\nReturns true if the error is related to decoding the …\nWhether a method is considered “idempotent”, meaning …\nCheck if status is within 100-199.\nReturns true if the error is from a <code>RedirectPolicy</code>.\nCheck if status is within 300-399.\nReturns true if the error is related to the request\nWhether a method is considered “safe”, meaning the …\nCheck if status is within 500-599.\nReturn whether the URL is special (has a special scheme)\nReturns true if the error is from …\nCheck if status is within 200-299.\nReturns true if the error is related to a timeout.\nParse a string as an URL, with this URL as the base URL.\nSend a JSON body.\nTry to deserialize the response body as JSON.\nBind to a local IP Address.\nCreates a relative URL if possible, with this URL as the …\nGet the method.\nGet a mutable reference to the method.\nConstructs a new <code>ClientBuilder</code>.\nConstructs a new request.\nDisable auto response body brotli decompression.\nDisable auto response body deflate decompression.\nDisable auto response body gzip decompression.\nDisables the hickory-dns async resolver.\nClear all <code>Proxies</code>, so <code>Client</code> will use no proxy anymore.\nAdds a <code>No Proxy</code> exclusion list to this Proxy\nDisable auto response body zstd decompression.\nReturn a default <code>ParseOptions</code> that can fully configure the …\nReturn the origin of this URL (…\nParse an absolute URL from a string.\nParse an absolute URL from a string and add params to its …\nReturn the password for this URL, if any, as a …\nReturn the path for this URL, as a percent-encoded ASCII …\nUnless this URL is cannot-be-a-base, return an iterator of …\nReturn an object with methods to manipulate this URL’s …\nSet an optional timeout for idle sockets being kept-alive.\nSets the maximum idle connection per host allowed in the …\nReturn the port number for this URL, if any.\nReturn the port number for this URL, or the default port …\nAdd a <code>Proxy</code> to the list of proxies the <code>Client</code> will use.\nModify the query string of the URL.\nReturn this URL’s query string, if any, as a …\nParse the URL’s query string, if any, as …\nManipulate this URL’s query string, viewed as a sequence …\nEnables a read timeout.\nRedirect Handling\nSet a <code>RedirectPolicy</code> for this client.\nEnable or disable automatic setting of the <code>Referer</code> header.\nGet the remote address used to get this <code>Response</code>.\nOverride DNS resolution for specific domains to a …\nOverride DNS resolution for specific domains to particular …\nReturn the scheme of this URL, lower-cased, as an ASCII …\nConstructs the Request and sends it to the target URL, …\nSerialize with Serde using the internal representation of …\nChange this URL’s fragment identifier.\nChange this URL’s host.\nChange this URL’s host to the given IP address.\nChange this URL’s password.\nChange this URL’s path.\nChange this URL’s port number.\nChange this URL’s query string. If <code>query</code> is <code>None</code>, this …\nChange this URL’s scheme.\nChange this URL’s username.\nResolve a URL’s host and port number to <code>SocketAddr</code>.\nReturns the status code, if the error was generated from a …\nGet the <code>StatusCode</code> of this <code>Response</code>.\nSet that all sockets have <code>SO_KEEPALIVE</code> set with the …\nSet whether sockets have <code>TCP_NODELAY</code> enabled.\nGet the full response text.\nEnables a total request timeout.\nGet the timeout.\nEnables a request timeout.\nGet a mutable reference to the timeout.\nAssuming the URL is in the <code>file</code> scheme or similar, convert …\nAttempt to clone the request.\nAttempt to clone the RequestBuilder.\nConsumes the response and returns a future for a possible …\nA builder method for the <code>http::response::Builder</code> type that …\nReturns a possible URL related to this error.\nGet the url.\nGet the final <code>Url</code> of this <code>Response</code>.\nReturns a mutable reference to the URL related to this …\nGet a mutable reference to the url.\nSets the <code>User-Agent</code> header to be used by this client.\nReturn the username for this URL (typically the empty …\nGet the http version.\nSet HTTP version\nGet the HTTP <code>Version</code> of this <code>Response</code>.\nGet a mutable reference to the http version.\nAdd a url related to this error (overwriting any existing)\nStrip the related url from this error (if, for example, it …\nWrap a <code>HttpBody</code> in a box inside <code>Body</code>.\nAlias for an <code>Iterator</code> trait object over <code>SocketAddr</code>.\nA name that must be resolved to addresses.\nTrait for customizing DNS resolution in reqwest.\nAlias for the <code>Future</code> type returned by a DNS resolver.\nView the name as a string.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPerforms DNS resolution on a <code>Name</code>. The return type is a …\nAdvertises which content types the client is able to …\nAdvertises which character set the client is able to …\nAdvertises which content encoding the client is able to …\nAdvertises which languages the client is able to …\nMarker used by the server to advertise partial request …\nPreflight response indicating if the response to the …\nPreflight response indicating permitted HTTP headers.\nPreflight header response indicating permitted access …\nIndicates whether the response can be shared with …\nIndicates which headers can be exposed as part of the …\nIndicates how long the results of a preflight request can …\nInforms the server which HTTP headers will be used when an …\nInforms the server know which HTTP method will be used …\nIndicates the time in seconds the object has been in a …\nLists the set of methods support by a resource.\nAdvertises the availability of alternate services to …\nContains the credentials to authenticate a user agent with …\nA marker trait used to identify values that can be used as …\nSpecifies directives for caching mechanisms in both …\nIndicates how caches have handled a response and its …\nSpecifies directives that allow origin servers to control …\nControls whether or not the network connection stays open …\nIndicates if the content is expected to be displayed …\nUsed to compress the media-type.\nUsed to describe the languages intended for the audience.\nIndicates the size of the entity-body.\nIndicates an alternate location for the returned data.\nIndicates where in a full body message a partial message …\nAllows controlling resources the user agent is allowed to …\nAllows experimenting with policies by monitoring their …\nUsed to indicate the media type of the resource.\nContains stored HTTP cookies previously sent by the server …\nContains the date and time at which the message was …\nIndicates the client’s tracking preference.\nA drain iterator for <code>HeaderMap</code>.\nIdentifier for a specific version of a resource.\nIndicates expectations that need to be fulfilled by the …\nContains the date/time after which the response is …\nA view into a single location in a <code>HeaderMap</code>, which may be …\nContains information from the client-facing side of proxy …\nContains an Internet email address for a human user who …\nA view to all values stored in a single entry.\nSpecifies the domain name of the server and (optionally) …\nA set of HTTP headers\nRepresents an HTTP header field name\nRepresents an HTTP header field value.\nMakes a request conditional based on the E-Tag.\nMakes a request conditional based on the modification date.\nMakes a request conditional based on the E-Tag.\nMakes a request conditional based on range.\nMakes the request conditional based on the last …\nA marker trait used to identify values that can be used as …\nAn owning iterator over the entries of a <code>HeaderMap</code>.\nA possible error when converting a <code>HeaderName</code> from another …\nA possible error when converting a <code>HeaderValue</code> from a …\n<code>HeaderMap</code> entry iterator.\n<code>HeaderMap</code> mutable entry iterator\nAn iterator over <code>HeaderMap</code> keys.\nThe Last-Modified header contains the date and time when …\nAllows the server to point an interested client to another …\nIndicates the URL to redirect a page to.\nIndicates the max number of intermediaries the request …\nError returned when max capacity of <code>HeaderMap</code> is exceeded\nIndicates where a fetch originates from.\nAn occupied entry\nA view into a single occupied location in a <code>HeaderMap</code>.\nHTTP/1.0 header usually used for backwards compatibility.\nDefines the authentication method that should be used to …\nContains the credentials to authenticate a user agent to a …\nAssociates a specific cryptographic public key with a …\nSends reports of pinning violation to the report-uri …\nIndicates the part of a document that the server should …\nContains the address of the previous web page from which a …\nGoverns which referrer information should be included with …\nInforms the web browser that the current page or frame …\nThe Retry-After response HTTP header indicates how long …\nThe |Sec-WebSocket-Accept| header field is used in the …\nThe |Sec-WebSocket-Extensions| header field is used in the …\nThe |Sec-WebSocket-Key| header field is used in the …\nThe |Sec-WebSocket-Protocol| header field is used in the …\nThe |Sec-WebSocket-Version| header field is used in the …\nContains information about the software used by the origin …\nUsed to send cookies from the server to the user agent.\nTells the client to communicate with HTTPS instead of …\nInforms the server of transfer encodings willing to be …\nAllows the sender to include additional fields at the end …\nSpecifies the form of encoding used to safely transfer the …\nA possible error when converting a <code>HeaderValue</code> to a string …\nUsed as part of the exchange to upgrade the protocol.\nSends a signal to the server expressing the client’s …\nContains a string that allows identifying the requesting …\nDetermines how to match future requests with cached …\nAdded by proxies to track routing.\nA vacant entry\nA view into a single empty location in a <code>HeaderMap</code>.\nAn drain iterator of all values associated with a single …\nAn iterator of all values associated with a single header …\nA mutable iterator of all values associated with a single …\n<code>HeaderMap</code> value iterator.\n<code>HeaderMap</code> mutable value iterator\nGeneral HTTP header contains information about possible …\nDefines the authentication method that should be used to …\nMarker used by the server to indicate that the MIME types …\nControls DNS prefetching.\nIndicates whether or not a browser should be allowed to …\nStop pages from loading when an XSS attack is detected.\nInserts a key-value pair into the map.\nInsert the value into the entry.\nConverts a <code>HeaderValue</code> to a byte slice.\nReturns a <code>str</code> representation of the header.\nReturns the number of headers the map can hold without …\nClears the map, removing all key-value pairs. Keeps the …\nReturns true if the map contains a value for the specified …\nClears the map, returning all entries as an iterator.\nGets the given key’s corresponding entry in the map for …\nPerforms a case-insensitive comparison of the string …\nPerforms a case-insensitive comparison of the string …\nExtend a <code>HeaderMap</code> with the contents of another <code>HeaderMap</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a slice of bytes to an HTTP header name.\nAttempt to convert a byte slice to a <code>HeaderValue</code>.\nConverts a slice of bytes to an HTTP header name.\nAttempt to convert a <code>Bytes</code> buffer to a <code>HeaderValue</code>.\nConvert a <code>Bytes</code> directly into a <code>HeaderValue</code> without …\nConverts a HeaderName into a HeaderValue\nConverts a static string to a HTTP header name.\nConvert a static string to a <code>HeaderValue</code>.\nAttempt to convert a string to a <code>HeaderValue</code>.\nReturns a reference to the value associated with the key.\nGet a reference to the first value in the entry.\nReturns a view of all values associated with a key.\nReturns a mutable reference to the value associated with …\nGet a mutable reference to the first value in the entry.\nPanics\nInserts a key-value pair into the map.\nInsert the value into the entry.\nSets the value of the entry.\nInsert the value into the entry.\nSets the value of the entry.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a consuming iterator, that is, one that moves keys …\nTake ownership of the key\nConverts the <code>OccupiedEntry</code> into a mutable reference to the …\nReturns true if the map contains no elements.\nReturns true if the <code>HeaderValue</code> has a length of zero bytes.\nReturns <code>true</code> if the value represents sensitive data.\nAn iterator visiting all key-value pairs.\nReturns an iterator visiting all values associated with …\nReturns an iterator visiting all values associated with …\nAn iterator visiting all key-value pairs, with mutable …\nReturns an iterator mutably visiting all values associated …\nReturns a reference to the entry’s key\nReturns a reference to the entry’s key\nReturns a reference to the entry’s key.\nAn iterator visiting all keys.\nReturns the number of keys stored in the map.\nReturns the number of headers stored in the map.\nReturns the length of <code>self</code>.\nCreate an empty <code>HeaderMap</code>.\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the result of …\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the result of …\nRemoves a key from the map, returning the value associated …\nRemove the entry from the map.\nRemove the entry from the map.\nRemove the entry from the map.\nReserves capacity for at least <code>additional</code> more headers to …\nMark that the header value represents sensitive …\nYields a <code>&amp;str</code> slice if the <code>HeaderValue</code> only contains …\nInserts a key-value pair into the map.\nGets the given key’s corresponding entry in the map for …\nInserts a key-value pair into the map.\nInsert the value into the entry.\nInsert the value into the entry.\nReserves capacity for at least <code>additional</code> more headers to …\nCreate an empty <code>HeaderMap</code> with the specified capacity.\nAn iterator visiting all values.\nAn iterator visiting all values mutably.\nCreate an empty <code>HeaderMap</code> with the specified capacity.\nAn action to perform when a redirect status code is found.\nA type that holds information on the next request and …\nA type that controls the policy on how to handle the …\nCreate a custom <code>Policy</code> using the passed function.\nReturns an action failing the redirect with an error.\nReturns an action meaning reqwest should follow the next …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a <code>Policy</code> with a maximum number of redirects.\nCreate a <code>Policy</code> that does not follow any redirect.\nGet the list of previous URLs that have already been …\nApply this policy to a given <code>Attempt</code> to produce a <code>Action</code>.\nGet the type of redirect.\nReturns an action meaning reqwest should not follow the …\nGet the next URL to redirect to.\nFallback layer for transparent transport failover. This …\nThe <code>FallbackService</code> consumes multiple transports and is …\nRateLimitRetryPolicy implements RetryPolicy to determine …\nA Transport Layer that is responsible for retrying …\nA Tower Service used by the RetryBackoffLayer that is …\nRetryPolicy defines logic for which TransportError …\nProviders may include the <code>backoff</code> in the error response …\nProvides a backoff hint if the error response contains it\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new retry layer with the given parameters and …\nCreate a new fallback service from a list of transports.\nCreates a new retry layer with the given parameters and …\nWhether to retry the request based on the given <code>error</code>\nSet the number of active transports to use (must be …\nSet the average cost of a request. Defaults to <code>17</code> CU The …\nContainer for pushing responses into a <code>MockTransport</code>.\nAn error response payload.\nA mock response that can be pushed into an <code>Asserter</code>.\nA transport that returns responses from an associated …\nA successful response payload.\nGuess whether the URL is local, based on the hostname.\nConvert to a <code>Box&lt;RawValue&gt;</code> from a <code>Serialize</code> type, mapping …")